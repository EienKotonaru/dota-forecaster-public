[{"/home/eienkotonaru/doka/frontend/src/index.js":"1","/home/eienkotonaru/doka/frontend/src/App.js":"2","/home/eienkotonaru/doka/frontend/src/reportWebVitals.js":"3","/home/eienkotonaru/doka/frontend/src/Components/CustomMatch/index.js":"4","/home/eienkotonaru/doka/frontend/src/Components/MainPage/index.js":"5","/home/eienkotonaru/doka/frontend/src/Components/Navigation/index.js":"6","/home/eienkotonaru/doka/frontend/src/Components/PagePresetMatchCommon/index.js":"7","/home/eienkotonaru/doka/frontend/src/Components/HeroPickPage/index.js":"8","/home/eienkotonaru/doka/frontend/src/Components/Header/index.js":"9","/home/eienkotonaru/doka/frontend/src/Components/HeroPickPage/HeroPicker/index.js":"10","/home/eienkotonaru/doka/frontend/src/Components/OptimalMovements/index.js":"11"},{"size":556,"mtime":1609090355455,"results":"12","hashOfConfig":"13"},{"size":1711,"mtime":1609098450847,"results":"14","hashOfConfig":"13"},{"size":402,"mtime":1609090355455,"results":"15","hashOfConfig":"13"},{"size":5723,"mtime":1609157855328,"results":"16","hashOfConfig":"13"},{"size":764,"mtime":1609157921400,"results":"17","hashOfConfig":"13"},{"size":2757,"mtime":1609096151409,"results":"18","hashOfConfig":"13"},{"size":3827,"mtime":1609103530857,"results":"19","hashOfConfig":"13"},{"size":4853,"mtime":1609103530877,"results":"20","hashOfConfig":"13"},{"size":338,"mtime":1609090355455,"results":"21","hashOfConfig":"13"},{"size":2792,"mtime":1609090550697,"results":"22","hashOfConfig":"13"},{"size":8947,"mtime":1609157700314,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pxbr0w",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/home/eienkotonaru/doka/frontend/src/index.js",[],["49","50"],"/home/eienkotonaru/doka/frontend/src/App.js",[],"/home/eienkotonaru/doka/frontend/src/reportWebVitals.js",[],"/home/eienkotonaru/doka/frontend/src/Components/CustomMatch/index.js",[],"/home/eienkotonaru/doka/frontend/src/Components/MainPage/index.js",[],"/home/eienkotonaru/doka/frontend/src/Components/Navigation/index.js",[],"/home/eienkotonaru/doka/frontend/src/Components/PagePresetMatchCommon/index.js",[],"/home/eienkotonaru/doka/frontend/src/Components/HeroPickPage/index.js",[],"/home/eienkotonaru/doka/frontend/src/Components/Header/index.js",[],"/home/eienkotonaru/doka/frontend/src/Components/HeroPickPage/HeroPicker/index.js",[],["51","52"],"/home/eienkotonaru/doka/frontend/src/Components/OptimalMovements/index.js",["53","54","55","56"],"import React from \"react\"\nimport './style.css'\nimport {\n    Container,\n    Button,\n    Spinner, Form, FormGroup, Row, Col, Label, CustomInput,\n} from 'reactstrap';\nimport './style.css'\n\nimport {\n    useParams\n} from \"react-router-dom\";\nimport Header from \"../Header\";\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nimport SampleFile from \"../CustomMatch/files/result_match_0.csv\";\nimport {Dropdown, DropdownItem, DropdownMenu, DropdownToggle} from \"reactstrap\";\nimport HeroPicker from \"../HeroPickPage/HeroPicker\";\n\nfunction PageCaptionMatch() {\n    return <Header text={\"Оптимальные перемещения персонажа\"}/>;\n}\n\nfunction ButtonCallMatch(props) {\n    let {matchId} = useParams();\n    return <Button\n        size={'lg'}\n        onClick={() => props.sender(matchId - 1)}\n        color=\"secondary\"\n        disabled={props.hero_prefix === \"\" || props.hero_num === -1 || !props.fileLoaded}\n    >\n        Получить результат\n    </Button>\n}\n\n\nexport default class OptimalMovements extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isError: false,\n            isShown: false,\n            plotlyGraph: \"\",\n            dataChanged: false,\n            dataWasReceived: false,\n            dataWasSend: false,\n            hero_prefix: \"\",\n            hero_num: -1,\n            fileLoaded: false\n        };\n        this.fieldChange = this.fieldChange.bind(this);\n    }\n\n    setFieldsToState(e) {\n        this.setState({\n            [e.target.name]: e.target.value,\n            dataChanged: true,\n        });\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                resolve(100);\n            }, 200)\n        });\n    }\n\n    fieldChange(value) {\n        this.setFieldsToState(value);\n    }\n\n    onSelectFile = e => {\n\n        if (e.target.files && e.target.files.length > 0) {\n            this.setState({file_name: e.target.files[0].name});\n\n\n            const reader = new FileReader();\n            reader.addEventListener(\"load\", () => {\n                    this.setState({file: reader.result,\n                    fileLoaded: true});\n                }\n            );\n\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n    sendData = (matchId) => {\n        this.setState({\n            dataWasSend: true,\n            dataWasReceived: false\n        })\n\n        let options = {\n            headers: {\n                'Accept': 'application/json',\n            },\n            method: 'POST'\n        };\n        options.body = JSON.stringify({\n            'file': this.state.file,\n            'hero_prefix': this.state.hero_prefix,\n            'hero_num': this.state.hero_num,\n        })\n\n        fetch('/api/optimal_movements', options)\n            .then((response) => {\n                if (response.status !== 200) {\n                    console.log('Looks like there was a problem. Status Code: ' +\n                        response.status);\n                    this.setState({\n                        isError: true\n                    });\n                    return;\n                }\n                return response.json();\n            })\n            .then((data) => {\n                if (!this.state.isError) {\n                    this.setState({\n                        plotlyGraph: data.plotly_graph,\n                        dataWasReceived: true,\n                        dataWasSend: false,\n                    })\n                }\n            })\n            .catch((err) => {\n                console.log('Fetch Error:', err);\n            });\n    }\n\n    changeEndpoint(endpoint) {\n        window.location = '/' + endpoint\n    }\n\n    componentDidMount() {\n\n    }\n\n    renderHeroNum(amount) {\n        let items = [];\n        items.push(<DropdownItem key={\"hero_none\"} onClick={() => {\n            this.setState({\n                hero_num: -1\n            });\n        }}>Не выбрано</DropdownItem>);\n        items.push(\n            <DropdownItem divider/>)\n        for (let i = 0; i < amount; i++) {\n            let ord_num = i + 1;\n            items.push(<DropdownItem onClick={() => {this.state.hero_num = ord_num}}>{ord_num}</DropdownItem>);\n        }\n        return items\n    }\n\n    render() {\n        const Plot = createPlotlyComponent(Plotly);\n        return (\n            <Container>\n                <PageCaptionMatch/>\n\n                <div className={\"center-text\"}>\n                    <a href={SampleFile} download>\n                        <Button\n                            size={'lg'}\n                            color=\"secondary\">\n                            Скачать пример файла\n                        </Button>\n                    </a>\n                </div>\n                <br/>\n                <Form>\n                    <FormGroup>\n                        <Row>\n                            <Col sm={12} md={3} lg={2}>\n                                <Label for=\"example_file\">Пользовательский файл</Label>\n                            </Col>\n                            <Col>\n                                <CustomInput type=\"file\"\n                                             id=\"match_file\"\n                                             name=\"file\"\n                                             onChange={this.onSelectFile}\n                                             label=\"Выберете файл в формате *.csv\"\n                                             accept={\".csv, .CSV\"}\n                                />\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                </Form>\n                <Form>\n                    <FormGroup>\n                        <Label>Выбор героя</Label>\n                        <Row>\n                            <Col sm={12} md={3} lg={2}>\n                                <div className={\"center-text\"}>\n                                    <Dropdown direction=\"down\" isOpen={this.state.btnDropleft_dh1} toggle={() => {\n                                        this.setState({ btnDropleft_dh1: !this.state.btnDropleft_dh1 });\n                                    }}>\n                                        <DropdownToggle caret>\n                                            Выберите сторону\n                                        </DropdownToggle>\n                                        <DropdownMenu>\n                                            <DropdownItem onClick={() => {this.state.hero_prefix = \"r\"}}>Radiant</DropdownItem>\n                                            <DropdownItem onClick={() => {this.state.hero_prefix = \"d\"}}>Dire</DropdownItem>\n                                        </DropdownMenu>\n                                    </Dropdown>\n                                </div>\n                            </Col>\n                                <br/>\n                            <Col sm={12} md={3} lg={2}>\n                                <div className={\"center-text\"}>\n                                    <Dropdown direction=\"down\" isOpen={this.state.btnDropleft_num} toggle={() => {\n                                        this.setState({ btnDropleft_num: !this.state.btnDropleft_num });\n                                    }}>\n                                        <DropdownToggle caret>\n                                            Выберите номер героя\n                                        </DropdownToggle>\n                                        <DropdownMenu>\n                                            {this.renderHeroNum(5)}\n                                        </DropdownMenu>\n                                    </Dropdown>\n                                </div>\n                            </Col>\n                        </Row>\n                    </FormGroup>\n                </Form>\n                <br/>\n\n                    <h2>Оптимальные перемещения для персонажа {this.state.hero_num !== -1 ?\n                        <>№{this.state.hero_num} ({this.state.hero_prefix === \"r\" ? \"Radiant\" : \"Dire\"})</> : <></>}</h2>\n\n                <br/>\n                <div className={\"center-text\"}>\n                    <ButtonCallMatch sender={this.sendData}\n                    hero_num={this.state.hero_num}\n                    hero_prefix={this.state.hero_prefix}\n                    fileLoaded={this.state.fileLoaded}/>\n                </div>\n\n                <br/>\n                {this.state.dataWasSend ? <Spinner color=\"info\"/> : <></>}\n                {this.state.dataWasReceived ? <div>\n                    <Plot\n                        data={this.state.plotlyGraph.data}\n                        layout={this.state.plotlyGraph.layout}\n                    />\n                </div> : <></>}\n            </Container>\n        );\n    }\n}\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"57","replacedBy":"61"},{"ruleId":"59","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":18,"column":8,"nodeType":"65","messageId":"66","endLine":18,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":151,"column":54,"nodeType":"69","endLine":151,"endColumn":64},{"ruleId":"67","severity":1,"message":"68","line":203,"column":75,"nodeType":"69","endLine":203,"endColumn":85},{"ruleId":"67","severity":1,"message":"68","line":204,"column":75,"nodeType":"69","endLine":204,"endColumn":85},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"no-unused-vars","'HeroPicker' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]